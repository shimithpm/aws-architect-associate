name: Deploy Lambda to ECR

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: snowflake-lambda
  FUNCTION_NAME: snowflake-connector

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT

      - name: Deploy Terraform infrastructure
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="snowflake_user=${{ secrets.SNOWFLAKE_USER }}" \
            -var="snowflake_password=${{ secrets.SNOWFLAKE_PASSWORD }}" \
            -var="snowflake_account=${{ secrets.SNOWFLAKE_ACCOUNT }}" \
            -var="snowflake_warehouse=${{ secrets.SNOWFLAKE_WAREHOUSE }}" \
            -var="snowflake_database=${{ secrets.SNOWFLAKE_DATABASE }}" \
            -var="snowflake_schema=${{ secrets.SNOWFLAKE_SCHEMA }}"